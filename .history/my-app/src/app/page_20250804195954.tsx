// src/app/page.tsx
'use client'; // üëà ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πâ useEffect ‡πÉ‡∏ô App Router ‡∏Ç‡∏≠‡∏á Next.js

import { useEffect, useRef } from 'react';
import {
  Chart,
  LineController,
  LineElement,
  PointElement,
  LinearScale,
  Title,
  CategoryScale,
  Filler,
} from 'chart.js';

Chart.register(LineController, LineElement, PointElement, LinearScale, Title, CategoryScale, Filler);

export default function Home() {
  const chartRef = useRef(null);

  useEffect(() => {
    if (!chartRef.current) return;

    const ctx = (chartRef.current as HTMLCanvasElement).getContext('2d');

    new Chart(ctx!, {
      type: 'line',
      data: {
        labels: ['‡∏à.', '‡∏≠.', '‡∏û.', '‡∏û‡∏§.', '‡∏®.'],
        datasets: [
          {
            label: '‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤',
            data: [10, 20, 15, 30, 25],
            fill: 'origin', // ‚úÖ fill ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
            borderColor: 'blue',
            backgroundColor: 'rgba(0, 0, 255, 0.2)',
            tension: 0.4,
          },
        ],
      },
      options: {
        responsive: true,
      },
    });
  }, []);

  return (
    <main>
      <h1>üìä ‡∏£‡πâ‡∏≤‡∏ô‡πÅ‡∏™‡∏á‡∏î‡∏µ‡πÅ‡∏Ñ‡∏£‡πå ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö!</h1>
      <canvas ref={chartRef} width="600" height="300" />
    </main>
  );
}
